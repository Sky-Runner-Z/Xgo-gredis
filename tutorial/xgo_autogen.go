// Code generated by xgo (XGo); DO NOT EDIT.

package main

import (
	"fmt"
	"github.com/Sky-Runner-Z/Xgo-gredis"
)

const _ = true

type index struct {
	gredis.Client
}
//line index.gredis:1
// 测试基本字符串操作
func (this *index) MainEntry() {
//line index.gredis:2:1
	this.Set("test:string", "hello world", 60000000000)
//line index.gredis:3:1
	value := this.Get("test:string")
//line index.gredis:4:1
	fmt.Println("字符串值:", value)
//line index.gredis:7:1
	this.Set("test:expire", "will expire", 5000000000)
//line index.gredis:8:1
	this.Expire("test:expire", 10)
//line index.gredis:11:1
	this.Set("test:del1", "value1", 0)
//line index.gredis:12:1
	this.Set("test:del2", "value2", 0)
//line index.gredis:13:1
	this.Del("test:del1", "test:del2")
//line index.gredis:16:1
	this.HSet("user:1001", "name", "Alice")
//line index.gredis:17:1
	this.HSet("user:1001", "age", "25")
//line index.gredis:18:1
	this.HSet("user:1001", "email", "alice@example.com")
//line index.gredis:19:1
	name := this.HGet("user:1001", "name")
//line index.gredis:20:1
	age := this.HGet("user:1001", "age")
//line index.gredis:21:1
	fmt.Println("用户名:", name, "年龄:", age)
//line index.gredis:24:1
	this.LPush("tasks", "task1")
//line index.gredis:25:1
	this.LPush("tasks", "task2")
//line index.gredis:26:1
	this.LPush("tasks", "task3")
//line index.gredis:27:1
	task := this.LPop("tasks")
//line index.gredis:28:1
	fmt.Println("取出的任务:", task)
//line index.gredis:31:1
	this.SAdd("tags", "redis", "database", "cache")
//line index.gredis:32:1
	this.SAdd("tags", "nosql")
//line index.gredis:33:1
	members := this.SMembers("tags")
//line index.gredis:34:1
	fmt.Println("标签集合:", members)
//line index.gredis:37:1
	ping_result := this.Ping()
//line index.gredis:38:1
	fmt.Println("连接状态:", ping_result)
//line index.gredis:41:1
	info_result := this.Info("server")
//line index.gredis:42:1
	fmt.Println("服务器信息已获取", info_result)
//line index.gredis:46:1
	fmt.Println("所有 Redis 功能测试完成!")
}
func (this *index) Main() {
	gredis.Gopt_Client_Main(this)
}
func main() {
	new(index).Main()
}
